{"list":[{"title":"module:createMessageChunks","link":"<a href=\"module-createMessageChunks.html\">createMessageChunks</a>","description":"<p>Creates and sends a chunked message from a file using the provided configuration settings.\nSimilar to createMessages, it checks the mailbox connection before proceeding with the message sending.</p>"},{"title":"module:createMessages","link":"<a href=\"module-createMessages.html\">createMessages</a>","description":"<p>Creates and sends a message using the provided configuration settings.\nThis function first ensures a connection to the mailbox via a handshake before sending the message.</p>"},{"title":"module:get","link":"<a href=\"module-get.html\">get</a>","description":"<p>Performs a handshake operation with a specified URL using the mailbox credentials and shared key.\nIt constructs the full URL, generates necessary headers, and sends a GET request to the server.\nLogs the outcome and returns the response if successful; otherwise, logs the error.</p>\n<p>A successful response should have a status of 200, but that needs to be checked at the client side.</p>"},{"title":"module:get","link":"<a href=\"module-get.html\">get</a>","description":"<p>Retrieves the count of messages in the mailbox's inbox. It constructs the URL for the inbox,\ngenerates the necessary headers, and sends a GET request. The response, containing the\nmessage count, is returned directly.</p>\n<p>If the request encounters errors (e.g., network issues, server errors), it logs the error details.\nA successful response should have a status of 200, but that needs to be checked at the client side.</p>"},{"title":"module:get","link":"<a href=\"module-get.html\">get</a>","description":"<p>Reads a message from the mailbox, handling both single and chunked message types. For chunked messages,\nit iteratively requests each chunk until the entire message is retrieved. The function logs the response status,\nheaders, and data. In case of errors, it logs the error details.</p>"},{"title":"module:headers","link":"<a href=\"module-headers.html\">headers</a>","description":"<p>Generates an authentication token for MESH. The token is freshly generated for each call.</p>"},{"title":"module:headers~generateHeaders","link":"<a href=\"module-headers.html#~generateHeaders\">generateHeaders</a>","description":"<p>Generates the headers required for a MESH request.</p>"},{"title":"module:loadConfig","link":"<a href=\"module-loadConfig.html\">loadConfig</a>","description":"<p>Loads and returns the configuration settings for the message exchange system.\nInitializes logging level, sets up HTTPS agents based on the environment (sandbox or integration),\nand prepares the necessary parameters for message exchange operations.</p>"},{"title":"module:post","link":"<a href=\"module-post.html\">post</a>","description":"<p>This const sets the size of each chunk in bytes. This constant sets the maximum amount of data (in bytes)\nthat each chunk can contain when sending a message in chunked form. It is calculated by taking a value and\nmultiplying it by 1024 to convert it to kilobytes (KB), it then multiples it again by 1024 to convert it\nto megabytes (MB).\nFor example, 10 * 1024 * 1024 sets the chunk size to 10 MB.</p>"},{"title":"module:post","link":"<a href=\"module-post.html\">post</a>","description":"<p>Compresses provided data using gzip compression.</p>"},{"title":"module:post","link":"<a href=\"module-post.html\">post</a>","description":"<p>Splits a buffer into chunks of a predefined size.</p>"},{"title":"module:post","link":"<a href=\"module-post.html\">post</a>","description":"<p>Sends a message in chunked form. Each chunk is compressed and sent sequentially.\nThe function handles creating and sending each chunk, and returns the result of the operation.</p>"},{"title":"module:post","link":"<a href=\"module-post.html\">post</a>","description":"<p>Safely stringifies an object into JSON format, avoiding circular reference issues.</p>"},{"title":"module:post","link":"<a href=\"module-post.html\">post</a>","description":"<p>Sends a message to a specified mailbox, with options for compression and custom headers.\nThe message is sent to the outbox of the specified mailbox ID at the given URL.</p>"},{"title":"module:put","link":"<a href=\"module-put.html\">put</a>","description":"<p>Marks a specified message as read in the mailbox. It constructs a PUT request to the service endpoint\nto update the message status to 'acknowledged'. Generates necessary headers for authentication and authorization.</p>"},{"title":"module:receiveMessage","link":"<a href=\"module-receiveMessage.html\">receiveMessage</a>","description":"<p>Receives messages for a configured mailbox, acknowledging each message to clear it from the mailbox.\nIt checks for new messages, reads them, and marks them as read.</p>"}]}